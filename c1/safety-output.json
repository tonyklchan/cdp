{
    "report_meta": {
        "scan_target": "files",
        "scanned": [
            "requirements.txt"
        ],
        "policy_file": null,
        "policy_file_source": "local",
        "api_key": false,
        "local_database_path": null,
        "safety_version": "2.1.1",
        "timestamp": "2022-09-03 12:38:52",
        "packages_found": 1,
        "vulnerabilities_found": 22,
        "vulnerabilities_ignored": 0,
        "remediations_recommended": 0,
        "telemetry": {
            "os_type": "Linux",
            "os_release": "5.4.0-124-generic",
            "os_description": "Linux-5.4.0-124-generic-x86_64-with-glibc2.29",
            "python_version": "3.8.10",
            "safety_command": "check",
            "safety_options": {
                "files": {
                    "-r": 1
                },
                "json": {
                    "--json": 1
                }
            },
            "safety_version": "2.1.1",
            "safety_source": "cli"
        },
        "git": {
            "branch": "master",
            "tag": "",
            "commit": "d330bc515be01fc2399a7a6d216058da82ffeaed",
            "dirty": false,
            "origin": "http://gitlab-ce-9jy27sfh.lab.practical-devsecops.training/root/django-nv.git"
        },
        "project": null,
        "json_version": 1
    },
    "scanned_packages": {
        "Django": {
            "name": "Django",
            "version": "1.8.3"
        }
    },
    "affected_packages": {
        "Django": {
            "name": "Django",
            "version": "1.8.3",
            "found": "requirements.txt",
            "insecure_versions": [],
            "secure_versions": [],
            "latest_version_without_known_vulnerabilities": null,
            "latest_version": null,
            "more_info_url": "https://pyup.io"
        }
    },
    "announcements": [],
    "vulnerabilities": [
        {
            "vulnerability_id": "37771",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<1.11.27",
            "all_vulnerable_specs": [
                "<1.11.27",
                ">=2.0a1,<2.2.9",
                ">=3.0a1,<3.0.1"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.) See CVE-2019-19844.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-19844",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2019-19844/37771/"
        },
        {
            "vulnerability_id": "33074",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<1.8.10",
            "all_vulnerable_specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "The password hasher in contrib/auth/hashers.py in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to enumerate users via a timing attack involving login requests.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2016-2513",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2016-2513/33074/"
        },
        {
            "vulnerability_id": "33073",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<1.8.10",
            "all_vulnerable_specs": [
                "<1.8.10",
                ">=1.9,<1.9.3"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "The utils.http.is_safe_url function in Django before 1.8.10 and 1.9.x before 1.9.3 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks or possibly conduct cross-site scripting (XSS) attacks via a URL containing basic authentication, as demonstrated by http://mysite.example.com\\@attacker.com.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2016-2512",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2016-2512/33073/"
        },
        {
            "vulnerability_id": "25718",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<1.8.15",
            "all_vulnerable_specs": [
                ">=1.9,<1.9.10",
                "<1.8.15"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "The cookie parsing code in Django before 1.8.15 and 1.9.x before 1.9.10, when used on a site with Google Analytics, allows remote attackers to bypass an intended CSRF protection mechanism by setting arbitrary cookies.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2016-7401",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2016-7401/25718/"
        },
        {
            "vulnerability_id": "39594",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.1.9",
            "all_vulnerable_specs": [
                ">=2.2a0,<2.2.2",
                "<2.1.9"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django versions 2.1.9 and 2.2.2 include a patched bundled jQuery version to avoid a Prototype Pollution vulnerability.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2019-11358",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2019-11358/39594/"
        },
        {
            "vulnerability_id": "40637",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.24",
            "all_vulnerable_specs": [
                "<2.2.24",
                ">=3.0a1,<3.1.12",
                ">=3.2a1,<3.2.4"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\r\nhttps://www.djangoproject.com/weblog/2021/jun/02/security-releases",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-33203",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2021-33203/40637/"
        },
        {
            "vulnerability_id": "43041",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.25",
            "all_vulnerable_specs": [
                "<2.2.25",
                ">=3.2a1,<3.2.10",
                ">=3.1a1,<3.1.14"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django versions 2.2.25, 3.1.14 and 3.2.10 include a fix for CVE-2021-44420: In Django 2.2 before 2.2.25, 3.1 before 3.1.14, and 3.2 before 3.2.10, HTTP requests for URLs with trailing newlines could bypass upstream access control based on URL paths.\r\nhttps://www.djangoproject.com/weblog/2021/dec/07/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-44420",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2021-44420/43041/"
        },
        {
            "vulnerability_id": "44423",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.26",
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45115: An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. UserAttributeSimilarityValidator incurred significant overhead in evaluating a submitted password that was artificially large in relation to the comparison values. In a situation where access to user registration was unrestricted, this provided a potential vector for a denial-of-service attack.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45115",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2021-45115/44423/"
        },
        {
            "vulnerability_id": "44426",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.26",
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45452: Storage.save in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1 allows directory traversal if crafted filenames are directly passed to it.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45452",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2021-45452/44426/"
        },
        {
            "vulnerability_id": "44427",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.26",
            "all_vulnerable_specs": [
                "<2.2.26",
                ">=3.0a1,<3.2.11",
                ">=4.0a1,<4.0.1"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.2.26, 3.2.11 and 4.0.1 include a fix for CVE-2021-45116: An issue was discovered in Django 2.2 before 2.2.26, 3.2 before 3.2.11, and 4.0 before 4.0.1. Due to leveraging the Django Template Language's variable resolution logic, the dictsort template filter was potentially vulnerable to information disclosure, or an unintended method call, if passed a suitably crafted key.\r\nhttps://www.djangoproject.com/weblog/2022/jan/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2021-45116",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2021-45116/44427/"
        },
        {
            "vulnerability_id": "44742",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.27",
            "all_vulnerable_specs": [
                "<2.2.27",
                ">=3.0a1,<3.2.12",
                ">=4.0a1,<4.0.2"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "The {% debug %} template tag in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2 does not properly encode the current context. This may lead to XSS.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-22818",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2022-22818/44742/"
        },
        {
            "vulnerability_id": "44741",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.27",
            "all_vulnerable_specs": [
                "<2.2.27",
                ">=3.0a1,<3.2.12",
                ">=4.0a1,<4.0.2"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "An issue was discovered in MultiPartParser in Django 2.2 before 2.2.27, 3.2 before 3.2.12, and 4.0 before 4.0.2. Passing certain inputs to multipart forms could result in an infinite loop when parsing files.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-23833",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2022-23833/44741/"
        },
        {
            "vulnerability_id": "48040",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.28",
            "all_vulnerable_specs": [
                "<2.2.28",
                ">=3.0a1,<3.2.13",
                ">=4.0a1,<4.0.4"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.2.28, 3.2.13 and 4.0.4 include a fix for CVE-2022-28347: A SQL injection issue was discovered in QuerySet.explain() in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. This occurs by passing a crafted dictionary (with dictionary expansion) as the **options argument, and placing the injection payload in an option name.\r\nhttps://www.djangoproject.com/weblog/2022/apr/11/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-28347",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2022-28347/48040/"
        },
        {
            "vulnerability_id": "48041",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.2.28",
            "all_vulnerable_specs": [
                "<2.2.28",
                ">=3.0a1,<3.2.13",
                ">=4.0a1,<4.0.4"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.2.28, 3.2.13 and 4.0.4 include a fix for CVE-2022-28346: An issue was discovered in Django 2.2 before 2.2.28, 3.2 before 3.2.13, and 4.0 before 4.0.4. QuerySet.annotate(), aggregate(), and extra() methods are subject to SQL injection in column aliases via a crafted dictionary (with dictionary expansion) as the passed **kwargs.\r\nhttps://www.djangoproject.com/weblog/2022/apr/11/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-28346",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2022-28346/48041/"
        },
        {
            "vulnerability_id": "33076",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8,<1.8.16",
            "all_vulnerable_specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3 use a hardcoded password for a temporary database user created when running tests with an Oracle database, which makes it easier for remote attackers to obtain access to the database server by leveraging failure to manually specify a password in the database settings TEST dictionary.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2016-9013",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2016-9013/33076/"
        },
        {
            "vulnerability_id": "33075",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8,<1.8.16",
            "all_vulnerable_specs": [
                ">=1.8,<1.8.16",
                ">=1.9,<1.9.11",
                ">=1.10,<1.10.3"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django before 1.8.x before 1.8.16, 1.9.x before 1.9.11, and 1.10.x before 1.10.3, when settings.DEBUG is True, allow remote attackers to conduct DNS rebinding attacks by leveraging failure to validate the HTTP Host header against settings.ALLOWED_HOSTS.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2016-9014",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2016-9014/33075/"
        },
        {
            "vulnerability_id": "25727",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8,<1.8.4",
            "all_vulnerable_specs": [
                ">=1.4,<1.4.22",
                ">=1.7,<1.7.10",
                ">=1.8,<1.8.4"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "contrib.sessions.middleware.SessionMiddleware in Django 1.8.x before 1.8.4, 1.7.x before 1.7.10, 1.4.x before 1.4.22, and possibly other versions allows remote attackers to cause a denial of service (session store consumption or session record removal) via a large number of requests to contrib.auth.views.logout, which triggers the creation of an empty session record.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2015-5963",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2015-5963/25727/"
        },
        {
            "vulnerability_id": "25714",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8,<1.8.7",
            "all_vulnerable_specs": [
                ">=1.8,<1.8.7",
                "<1.7.11",
                ">=1.9,<1.9rc2"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "The get_format function in utils/formats.py in Django before 1.7.x before 1.7.11, 1.8.x before 1.8.7, and 1.9.x before 1.9rc2 might allow remote attackers to obtain sensitive application secrets via a settings key in place of a date/time format setting, as demonstrated by SECRET_KEY.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2015-8213",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2015-8213/25714/"
        },
        {
            "vulnerability_id": "33300",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8.0,<1.8.18",
            "all_vulnerable_specs": [
                ">=1.10,<1.10.7",
                ">=1.9.0,<1.9.13",
                ">=1.8.0,<1.8.18"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django version 1.10.7, 1.9.13 and 1.8.18 include a fix for CVE-2017-7233: Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely 'django.utils.http.is_safe_url()') considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on 'is_safe_url()' to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.\r\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2017-7233",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2017-7233/33300/"
        },
        {
            "vulnerability_id": "35740",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8.0a1,<1.8.18",
            "all_vulnerable_specs": [
                ">=1.8.0a1,<1.8.18",
                ">=1.9.0a1,<1.9.13",
                ">=1.10.0a1,<1.10.7"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django versions 1.10.7, 1.9.13 and 1.8.18 include a fix for CVE-2017-7234: A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the 'django.views.static.serve()' view could redirect to any other domain, aka an open redirect vulnerability.\r\nhttps://www.djangoproject.com/weblog/2017/apr/04/security-releases/\r\nhttp://www.debian.org/security/2017/dsa-3835\r\nhttp://www.securityfocus.com/bid/97401\r\nhttp://www.securitytracker.com/id/1038177",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2017-7234",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2017-7234/35740/"
        },
        {
            "vulnerability_id": "35796",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8a1 ,<1.8.19",
            "all_vulnerable_specs": [
                ">=2.0a1,<2.0.3",
                ">=1.8a1 ,<1.8.19",
                ">=1.11a1,<1.11.11"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "Django 2.0.3, 1.8.19 and 1.11.11 include a fix for CVE-2018-7537: An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2018-7537",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2018-7537/35796/"
        },
        {
            "vulnerability_id": "35797",
            "package_name": "django",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": ">=1.8a1 ,<1.8.19",
            "all_vulnerable_specs": [
                ">=2.0a1,<2.0.3",
                ">=1.8a1 ,<1.8.19",
                ">=1.11a1,<1.11.11"
            ],
            "analyzed_version": "1.8.3",
            "advisory": "An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable. See: CVE-2018-7536.",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2018-7536",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2018-7536/35797/"
        }
    ],
    "ignored_vulnerabilities": [],
    "remediations": {
        "django": {
            "current_version": "1.8.3",
            "vulnerabilities_found": 22,
            "recommended_version": null,
            "other_recommended_versions": [],
            "more_info_url": "https://pyup.io"
        }
    }
}
